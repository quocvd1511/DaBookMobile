"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = (0, tslib_1.__importStar)(require("react"));
const react_native_1 = require("react-native");
/**
 * ? Local Imports
 */
const RNTextArea_style_1 = (0, tslib_1.__importStar)(require("./RNTextArea.style"));
const RNTextArea = ({ style, textInputStyle, inputRef, maxCharLimit = 200, defaultCharCount = 0, charCountColor = "#ccc", exceedCharCountColor = "red", onChangeText, maxCharTextStyle, ...rest }) => {
    const [charCount, setCharCount] = React.useState(defaultCharCount || 0);
    const handleChangeText = (text) => {
        setCharCount(text.length);
        if (onChangeText)
            onChangeText(text);
    };
    const renderCharCount = () => {
        if (!maxCharLimit)
            return null;
        return (<react_native_1.Text ref={inputRef} style={[
                (0, RNTextArea_style_1._charCountStyle)(charCount > maxCharLimit ? exceedCharCountColor : charCountColor),
                maxCharTextStyle,
            ]}>{`${charCount}/${maxCharLimit}`}</react_native_1.Text>);
    };
    return (<react_native_1.View style={[RNTextArea_style_1.default.container, style]}>
      <react_native_1.TextInput multiline {...rest} style={[RNTextArea_style_1.default.textInputStyle, textInputStyle]} onChangeText={handleChangeText}/>
      {renderCharCount()}
    </react_native_1.View>);
};
exports.default = RNTextArea;
//# sourceMappingURL=RNTextArea.js.map